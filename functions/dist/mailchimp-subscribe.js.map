{"version":3,"sources":["../src/mailchimp-subscribe.js"],"names":["mailchimpSubscribe","functions","firestore","document","onCreate","snapshot","mailchimpConfig","config","mailchimp","console","log","subscriber","data","subscriberData","email_address","email","status","merge_fields","FNAME","firstName","LNAME","lastName","subscribeToMailchimp","emailHash","uri","dc","listid","url","method","subscribePromise","body","JSON","stringify","headers","apikey","then","res","json","title","hash","catch","error"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,MAAMA,kBAAkB,GAAGC,SAAS,CAACC,SAAV,CAAoBC,QAApB,CAA6B,mBAA7B,EACxBC,QADwB,CACdC,QAAD,IAAc;AAEtB,QAAMC,eAAe,GAAGL,SAAS,CAACM,MAAV,GAAmBC,SAA3C;;AACA,MAAI,CAACF,eAAL,EAAsB;AACpBG,IAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACD;;AAED,QAAMC,UAAU,GAAGN,QAAQ,CAACO,IAAT,EAAnB;AAEA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,aAAa,EAAEH,UAAU,CAACI,KADL;AAErBC,IAAAA,MAAM,EAAE,YAFa;AAGrBC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAEP,UAAU,CAACQ,SADN;AAEZC,MAAAA,KAAK,EAAET,UAAU,CAACU;AAFN;AAHO,GAAvB;AASA,SAAOC,oBAAoB,CAAChB,eAAD,EAAkBO,cAAlB,CAA3B;AACD,CApBwB,CAA3B;;AAsBA,SAASS,oBAAT,CAA8BhB,eAA9B,EAA+CO,cAA/C,EAA+DU,SAA/D,EAA0E;AACxE,QAAMC,GAAG,GAAI,WAAUlB,eAAe,CAACmB,EAAG,gCAA+BnB,eAAe,CAACoB,MAAO,UAAhG;AACA,QAAMC,GAAG,GAAGJ,SAAS,GAAI,GAAEC,GAAI,IAAGD,SAAU,EAAvB,GAA2BC,GAAhD;AACA,QAAMI,MAAM,GAAGL,SAAS,GAAG,OAAH,GAAa,MAArC;AAEA,QAAMM,gBAAgB,GAAG,wBAAMF,GAAN,EAAW;AAClCC,IAAAA,MADkC;AAElCE,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,cAAf,CAF4B;AAGlCoB,IAAAA,OAAO,EAAE;AACP,uBAAkB,UAAS3B,eAAe,CAAC4B,MAAO,EAD3C;AAEP,sBAAgB;AAFT;AAHyB,GAAX,CAAzB;AASA,SAAOL,gBAAgB,CACpBM,IADI,CACEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADV,EAEJF,IAFI,CAEC,CAAC;AAAEnB,IAAAA,MAAF;AAAUsB,IAAAA;AAAV,GAAD,KAAuB;AAC3B,QAAItB,MAAM,KAAK,GAAX,IAAkBsB,KAAK,KAAK,eAAhC,EAAiD;AAC/CzB,MAAAA,cAAc,CAACG,MAAf,GAAwB,SAAxB;AACA,YAAMuB,IAAI,GAAG,iBAAI1B,cAAc,CAACC,aAAnB,CAAb;AACA,aAAOQ,oBAAoB,CAAChB,eAAD,EAAkBO,cAAlB,EAAkC0B,IAAlC,CAA3B;AACD,KAJD,MAIO,IAAGX,MAAM,KAAK,MAAd,EAAsB;AAC3BnB,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEG,cAAc,CAACC,aAAc,+BAA5C;AACD,KAFM,MAEA,IAAGc,MAAM,KAAK,OAAd,EAAuB;AAC5BnB,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEG,cAAc,CAACC,aAAc,iCAA5C;AACD;AACF,GAZI,EAaJ0B,KAbI,CAaGC,KAAD,IAAWhC,OAAO,CAACgC,KAAR,CAAe,gDAA+CA,KAAM,EAApE,CAbb,CAAP;AAcD;;eAEczC,kB","sourcesContent":["import * as functions from 'firebase-functions';\nimport md5 from 'md5';\nimport fetch from 'node-fetch';\n\nconst mailchimpSubscribe = functions.firestore.document('/subscribers/{id}')\n  .onCreate((snapshot) => {\n\n    const mailchimpConfig = functions.config().mailchimp;\n    if (!mailchimpConfig) {\n      console.log('Can\\'t subscribe user, Mailchimp config is empty.');\n    }\n\n    const subscriber = snapshot.data();\n\n    const subscriberData = {\n      email_address: subscriber.email,\n      status: 'subscribed',\n      merge_fields: {\n        FNAME: subscriber.firstName,\n        LNAME: subscriber.lastName,\n      },\n    };\n\n    return subscribeToMailchimp(mailchimpConfig, subscriberData);\n  });\n\nfunction subscribeToMailchimp(mailchimpConfig, subscriberData, emailHash) {\n  const uri = `https://${mailchimpConfig.dc}.api.mailchimp.com/3.0/lists/${mailchimpConfig.listid}/members`;\n  const url = emailHash ? `${uri}/${emailHash}` : uri;\n  const method = emailHash ? 'PATCH' : 'POST';\n\n  const subscribePromise = fetch(url, {\n    method,\n    body: JSON.stringify(subscriberData),\n    headers: {\n      'Authorization': `apiKey ${mailchimpConfig.apikey}`,\n      'Content-Type': 'application/json',\n    },\n  });\n\n  return subscribePromise\n    .then((res) => res.json())\n    .then(({ status, title }) => {\n      if (status === 400 && title === 'Member Exists') {\n        subscriberData.status = 'pending';\n        const hash = md5(subscriberData.email_address);\n        return subscribeToMailchimp(mailchimpConfig, subscriberData, hash);\n      } else if(method === 'POST') {\n        console.log(`${subscriberData.email_address} was added to subscribe list.`);\n      } else if(method === 'PATCH') {\n        console.log(`${subscriberData.email_address} was updated in subscribe list.`);\n      }\n    })\n    .catch((error) => console.error(`Error occured during Mailchimp subscription: ${error}`));\n}\n\nexport default mailchimpSubscribe;\n"],"file":"mailchimp-subscribe.js"}