{"version":3,"sources":["../../src/schedule-generator/speakers-sessions-schedule-map.js"],"names":["sessionsSpeakersScheduleMap","sessionsRaw","speakersRaw","scheduleRaw","schedule","sessions","speakers","scheduleTags","dayKey","Object","keys","day","tracksNumber","tracks","length","dayTags","timeslots","extensions","timeslotLen","timeslotsIndex","timeslot","innerSessions","sessionsLen","sessionIndex","subSessions","subSessionsLen","items","subSessionIndex","sessionId","subsession","mainTag","tags","endTimeRaw","extend","endTime","getEndTime","startTime","Set","addTagTo","finalSubSession","assign","id","toString","track","duration","getDuration","dateReadable","map","speakerId","push","updateSpeakersSessions","start","end","gridArea","key","value","entries","getTimeDifference","date","timezone","Date","match","timeStart","getTime","timeEnd","totalNumber","number","difference","Math","floor","result","getHours","getMinutes","hh","mm","array","element","indexOf","speakerIds","session","generatedSpeakers","i","speaker","generatedSpeaker","hasSessionsAssigned","speakerSessions","filter","speakerSession","speakerTags","forEach","tag","includes"],"mappings":"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","sourcesContent":["function sessionsSpeakersScheduleMap(sessionsRaw, speakersRaw, scheduleRaw) {\n    let schedule = {};\n    let sessions = {};\n    let speakers = {};\n    let scheduleTags = [];\n\n    for (const dayKey of Object.keys(scheduleRaw)) {\n        const day = scheduleRaw[dayKey];\n        const tracksNumber = day.tracks.length;\n        let dayTags = [];\n        let timeslots = [];\n        let extensions = {};\n\n        const timeslotLen = day.timeslots.length;\n        for (let timeslotsIndex = 0; timeslotsIndex < timeslotLen; timeslotsIndex++) {\n            const timeslot = day.timeslots[timeslotsIndex];\n            let innerSessions = [];\n\n            const sessionsLen = timeslot.sessions.length;\n            for (let sessionIndex = 0; sessionIndex < sessionsLen; sessionIndex++) {\n                let subSessions = [];\n\n                const subSessionsLen = timeslot.sessions[sessionIndex].items.length;\n                for (let subSessionIndex = 0; subSessionIndex < subSessionsLen; subSessionIndex++) {\n                    const sessionId = timeslot.sessions[sessionIndex].items[subSessionIndex];\n                    const subsession = sessionsRaw[sessionId];\n                    const mainTag = subsession.tags ? subsession.tags[0] : 'General';\n                    const endTimeRaw = timeslot.sessions[sessionIndex].extend\n                        ? day.timeslots[timeslotsIndex + timeslot.sessions[sessionIndex].extend - 1].endTime\n                        : timeslot.endTime;\n                    const endTime = subSessionsLen > 1\n                        ? getEndTime(\n                            dayKey,\n                            timeslot.startTime,\n                            endTimeRaw,\n                            subSessionsLen,\n                            subSessionIndex + 1\n                        )\n                        : endTimeRaw;\n                    const startTime = subSessionsLen > 1 && subSessionIndex > 0\n                        ? sessions[timeslot.sessions[sessionIndex].items[subSessionIndex - 1]].endTime\n                        : timeslot.startTime;\n\n                    if (subsession.tags) {\n                        dayTags = [...new Set([...dayTags, ...subsession.tags])];\n                    }\n                    scheduleTags = addTagTo(scheduleTags || [], mainTag);\n\n                    const finalSubSession = Object.assign({}, subsession, {\n                        mainTag,\n                        id: sessionId.toString(),\n                        day: dayKey,\n                        track: subsession.track || day.tracks[sessionIndex],\n                        startTime,\n                        endTime,\n                        duration: getDuration(dayKey, startTime, endTime),\n                        dateReadable: day.dateReadable,\n                        speakers: subsession.speakers ? subsession.speakers.map((speakerId) => Object.assign({\n                            id: speakerId,\n                        }, speakersRaw[speakerId], {\n                                sessions: null,\n                            })) : [],\n                    });\n\n                    subSessions.push(finalSubSession);\n                    sessions[sessionId] = finalSubSession;\n                    if (subsession.speakers) {\n                        speakers = Object.assign(\n                            {},\n                            speakers,\n                            updateSpeakersSessions(speakersRaw, subsession.speakers, finalSubSession, speakers)\n                        );\n                    }\n                }\n\n                const start = `${timeslotsIndex + 1} / ${sessionIndex + 1}`;\n                const end = `${timeslotsIndex +\n                    (timeslot.sessions[sessionIndex].extend || 0) + 1} / ${sessionsLen !== 1\n                        ? sessionIndex + 2 : Object.keys(extensions).length ? Object.keys(extensions)[0]\n                            : tracksNumber + 1}`;\n\n                if (timeslot.sessions[sessionIndex].extend) {\n                    extensions[sessionIndex + 1] = timeslot.sessions[sessionIndex].extend;\n                }\n\n                innerSessions = [...innerSessions, {\n                    gridArea: `${start} / ${end}`,\n                    items: subSessions,\n                }];\n            }\n\n            for (const [key, value] of Object.entries(extensions)) {\n                if (value === 1) {\n                    delete extensions[key];\n                } else {\n                    extensions[key] = value - 1;\n                }\n            }\n\n            timeslots.push(Object.assign({}, timeslot, {\n                sessions: innerSessions,\n            }));\n        }\n\n        schedule = Object.assign({}, schedule, {\n            [dayKey]: Object.assign({}, day, {\n                timeslots,\n                tags: dayTags,\n            }),\n        });\n    }\n\n    return {\n        sessions,\n        schedule,\n        speakers,\n    }\n}\n\nfunction getTimeDifference(date, startTime, endTime) {\n    const timezone = new Date().toString().match(/([A-Z]+[+-][0-9]+.*)/)[1];\n    const timeStart = new Date(date + ' ' + startTime + ' ' + timezone).getTime();\n    const timeEnd = new Date(date + ' ' + endTime + ' ' + timezone).getTime();\n    return timeEnd - timeStart;\n}\n\nfunction getEndTime(date, startTime, endTime, totalNumber, number) {\n    const timezone = new Date().toString().match(/([A-Z]+[+-][0-9]+.*)/)[1];\n    const timeStart = new Date(`${date} ${startTime} ${timezone}`).getTime();\n    const difference = Math.floor(getTimeDifference(date, startTime, endTime) / totalNumber);\n    const result = new Date(timeStart + difference * number);\n    return result.getHours() + ':' + result.getMinutes();\n}\n\nfunction getDuration(date, startTime, endTime) {\n    let difference = getTimeDifference(date, startTime, endTime);\n    const hh = Math.floor(difference / 1000 / 60 / 60);\n    difference -= hh * 1000 * 60 * 60;\n    return {\n        hh,\n        mm: Math.floor(difference / 1000 / 60),\n    };\n}\n\nfunction addTagTo(array, element) {\n    if (array.indexOf(element) < 0) {\n        return [...array, element];\n    }\n}\n\nfunction updateSpeakersSessions(speakersRaw, speakerIds, session, generatedSpeakers) {\n    let result = {};\n    for (let i = 0; i < speakerIds.length; i++) {\n        const speaker = speakersRaw[speakerIds[i]];\n        const generatedSpeaker = generatedSpeakers[speakerIds[i]];\n        const hasSessionsAssigned = generatedSpeaker && generatedSpeaker.sessions && generatedSpeaker.sessions.length;\n\n        if (speaker) {\n            const speakerSessions = hasSessionsAssigned\n                ? [...generatedSpeaker.sessions]\n                : [];\n\n            if (!speakerSessions.filter((speakerSession) => speakerSession.id === session.id).length) {\n                speakerSessions.push(session)\n            }\n\n            const speakerTags = hasSessionsAssigned ? [...generatedSpeaker.tags] : [];\n            speakerSessions.forEach((session) => {\n                if (session.tags) session.tags.forEach(tag => {\n                    if (!speakerTags.includes(tag)) speakerTags.push(tag);\n                });\n            });\n\n            result[speakerIds[i]] = Object.assign({}, speaker, {\n                id: speakerIds[i],\n                sessions: speakerSessions,\n                tags: speakerTags,\n            });\n        }\n    }\n    return result;\n}\n\nexport default sessionsSpeakersScheduleMap"],"file":"speakers-sessions-schedule-map.js"}