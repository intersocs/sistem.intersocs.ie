{"version":3,"sources":["../../src/schedule-generator/speakers-sessions-map.js"],"names":["sessionsSpeakersMap","sessionsRaw","speakersRaw","sessions","speakers","index","Object","keys","length","sessionId","currentSession","sessionSpeakers","mainTag","tags","forEach","speakerId","push","id","generatedSpeaker","sessionBySpeaker","speakerTags","tag","includes","speakerSessions"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,mBAAT,CAA6BC,WAA7B,EAA0CC,WAA1C,EAAuD;AACnD,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,QAAQ,GAAG,EAAjB;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYN,WAAZ,EAAyBO,MAArD,EAA6DH,KAAK,EAAlE,EAAsE;AAClE,UAAMI,SAAS,GAAGH,MAAM,CAACC,IAAP,CAAYN,WAAZ,EAAyBI,KAAzB,CAAlB;AACA,UAAMK,cAAc,GAAGT,WAAW,CAACQ,SAAD,CAAlC;AACA,UAAME,eAAe,GAAG,EAAxB;AACA,UAAMC,OAAO,GAAGF,cAAc,CAACG,IAAf,GAAsBH,cAAc,CAACG,IAAf,CAAoB,CAApB,CAAtB,GAA+C,SAA/D;AAEAH,IAAAA,cAAc,CAACN,QAAf,IACIM,cAAc,CAACN,QAAf,CAAwBU,OAAxB,CAAgCC,SAAS,IAAI;AACzC,UAAI,CAACb,WAAW,CAACa,SAAD,CAAhB,EAA6B;AAC7BJ,MAAAA,eAAe,CAACK,IAAhB;AAAuBC,QAAAA,EAAE,EAAEF;AAA3B,SAAyCb,WAAW,CAACa,SAAD,CAApD;AAEA,YAAMG,gBAAgB,GAAGd,QAAQ,CAACW,SAAD,CAAjC;;AACA,YAAMI,gBAAgB;AAAKF,QAAAA,EAAE,EAAER,SAAT;AAAoBG,QAAAA,OAAO,EAAEA;AAA7B,SAAyCF,cAAzC,CAAtB;;AAEA,UAAIQ,gBAAJ,EAAsB;AAClB,cAAME,WAAW,GAAGF,gBAAgB,CAACL,IAAjB,GAAwB,CAAC,GAAGK,gBAAgB,CAACL,IAArB,CAAxB,GAAqD,EAAzE;AACAM,QAAAA,gBAAgB,CAACN,IAAjB,IAAyBM,gBAAgB,CAACN,IAAjB,CAAsBC,OAAtB,CAA8BO,GAAG,IAAI;AAC1D,cAAI,CAACD,WAAW,CAACE,QAAZ,CAAqBD,GAArB,CAAL,EAAgCD,WAAW,CAACJ,IAAZ,CAAiBK,GAAjB;AACnC,SAFwB,CAAzB;AAGA,cAAME,eAAe,GAAIL,gBAAgB,CAACf,QAAlB,GACxB,CAAC,GAAGe,gBAAgB,CAACf,QAArB,EAA+BgB,gBAA/B,CADwB,GAExB,CAACA,gBAAD,CAFA;AAIAf,QAAAA,QAAQ,CAACW,SAAD,CAAR,qBACOG,gBADP;AAEIL,UAAAA,IAAI,EAAE,CAAC,GAAGO,WAAJ,CAFV;AAGIjB,UAAAA,QAAQ,EAAEoB;AAHd;AAKH,OAdD,MAeK;AACDnB,QAAAA,QAAQ,CAACW,SAAD,CAAR,qBACOb,WAAW,CAACa,SAAD,CADlB;AAEIE,UAAAA,EAAE,EAAEF,SAFR;AAGIF,UAAAA,IAAI,EAAEM,gBAAgB,CAACN,IAH3B;AAIIV,UAAAA,QAAQ,EAAE,CAACgB,gBAAD;AAJd;AAMH;AACJ,KA9BD,CADJ;AAiCAhB,IAAAA,QAAQ,CAACM,SAAD,CAAR,qBACOC,cADP;AAEIO,MAAAA,EAAE,EAAER,SAFR;AAGIG,MAAAA,OAAO,EAAEA,OAHb;AAIIR,MAAAA,QAAQ,EAAEO;AAJd;AAMH;;AAAA;AAED,SAAO;AAAER,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAP;AACH;;eAEcJ,mB","sourcesContent":["function sessionsSpeakersMap(sessionsRaw, speakersRaw) {\n    const sessions = {};\n    const speakers = {};\n\n    for (let index = 0; index < Object.keys(sessionsRaw).length; index++) {\n        const sessionId = Object.keys(sessionsRaw)[index];\n        const currentSession = sessionsRaw[sessionId];\n        const sessionSpeakers = [];\n        const mainTag = currentSession.tags ? currentSession.tags[0] : 'General';\n\n        currentSession.speakers &&\n            currentSession.speakers.forEach(speakerId => {\n                if (!speakersRaw[speakerId]) return;\n                sessionSpeakers.push({ id: speakerId, ...speakersRaw[speakerId]});\n\n                const generatedSpeaker = speakers[speakerId];\n                const sessionBySpeaker = { id: sessionId, mainTag: mainTag, ...currentSession };\n\n                if (generatedSpeaker) {\n                    const speakerTags = generatedSpeaker.tags ? [...generatedSpeaker.tags] : [];\n                    sessionBySpeaker.tags && sessionBySpeaker.tags.forEach(tag => {\n                        if (!speakerTags.includes(tag)) speakerTags.push(tag);\n                    });\n                    const speakerSessions = (generatedSpeaker.sessions) ?\n                    [...generatedSpeaker.sessions, sessionBySpeaker] :\n                    [sessionBySpeaker];\n\n                    speakers[speakerId] = { \n                        ...generatedSpeaker,\n                        tags: [...speakerTags],\n                        sessions: speakerSessions,\n                    };\n                }\n                else {\n                    speakers[speakerId] = {\n                        ...speakersRaw[speakerId],\n                        id: speakerId,\n                        tags: sessionBySpeaker.tags,\n                        sessions: [sessionBySpeaker],\n                    };\n                }\n            });\n\n        sessions[sessionId] = {\n            ...currentSession,\n            id: sessionId,\n            mainTag: mainTag,\n            speakers: sessionSpeakers,\n        };\n    };\n\n    return { sessions, speakers };\n}\n\nexport default sessionsSpeakersMap;"],"file":"speakers-sessions-map.js"}