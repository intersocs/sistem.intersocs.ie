{"version":3,"sources":["../src/schedule-notifications.js"],"names":["FORMAT","removeUserTokens","tokensToUsers","userTokens","Object","keys","reduce","acc","token","userId","promises","map","ref","collection","doc","firestore","runTransaction","transaction","get","then","exists","val","data","newVal","set","Promise","all","sendPushNotificationToUsers","userIds","payload","console","log","tokensPromise","id","usersTokens","aggregator","tokens","tokensToRemove","messagingResponse","sendToDevice","results","forEach","result","index","error","code","scheduleNotifications","functions","pubsub","topic","onPublish","notificationsConfigPromise","schedulePromise","notificationsConfigSnapshot","scheduleSnapshot","notificationsConfig","schedule","docs","todayDay","utcOffset","timezone","format","beforeTime","subtract","afterTime","add","upcomingTimeslot","timeslots","filter","timeslot","timeslotTime","startTime","isBetween","upcomingSessions","sessions","aggregatedSessions","current","items","usersIdsSnapshot","upcomingSession","sessionIndex","sessionInfoSnapshot","usersIds","userIdsFeaturedSession","sessionId","toString","length","session","end","fromNow","title","body","click_action","icon"],"mappings":"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","sourcesContent":["import * as functions from 'firebase-functions';\nimport { firestore, messaging } from 'firebase-admin';\nimport moment from 'moment';\n\nconst FORMAT = 'HH:mm';\n\nconst removeUserTokens = tokensToUsers => {\n  const userTokens = Object.keys(tokensToUsers).reduce((acc, token) => {\n    const userId = tokensToUsers[token];\n    const userTokens = acc[userId] || [];\n\n    return { ...acc, [userId]: [ ...userTokens, token ]};\n  }, {});\n\n  const promises = Object.keys(userTokens).map(userId => {\n    const ref = firestore().collection('notificationsUsers').doc(userId);\n\n    return firestore.runTransaction(transaction => transaction\n      .get(ref)\n      .then(doc => {\n        if (!doc.exists) {\n          return;\n        }\n\n        const val = doc.data();\n        const newVal = Object.keys(val).reduce((acc, token) => {\n          if (tokensToUsers[token]) return acc;\n\n          return { ...acc, [token]: true };\n        }, {});\n\n        transaction.set(newVal);\n      })\n    );\n  });\n\n  return Promise.all(promises);\n};\n\nconst sendPushNotificationToUsers = async (userIds, payload) => {\n  console.log('sendPushNotificationToUsers user ids', userIds, 'with notification', payload);\n\n  const tokensPromise = userIds.map(id => firestore().collection('notificationsUsers').doc(id).get());\n\n  const usersTokens = await Promise.all(tokensPromise);\n  const tokensToUsers = usersTokens.reduce((aggregator, userTokens) => {\n    if (!userTokens.exists) return aggregator;\n    const { tokens } = userTokens.data();\n    return { ...aggregator, tokens };\n  }, {});\n  const tokens = Object.keys(tokensToUsers);\n\n  const tokensToRemove = {};\n  const messagingResponse = await messaging().sendToDevice(tokens, payload);\n  messagingResponse.results.forEach((result, index) => {\n    const error = result.error;\n    if (error) {\n      console.error('Failure sending notification to', tokens[index], error);\n      if (error.code === 'messaging/invalid-registration-token' ||\n        error.code === 'messaging/registration-token-not-registered') {\n        const token = tokens[index];\n        tokensToRemove[token] = tokensToUsers[token];\n      }\n    }\n  });\n\n  return removeUserTokens(tokensToRemove);\n};\n\nconst scheduleNotifications = functions.pubsub.topic('schedule-tick').onPublish(async () => {\n    const notificationsConfigPromise = firestore().collection('config').doc('notifications').get();\n    const schedulePromise = firestore().collection('schedule').get();\n\n    const [notificationsConfigSnapshot, scheduleSnapshot] = await Promise.all([notificationsConfigPromise, schedulePromise]);\n    const notificationsConfig = notificationsConfigSnapshot.exists ? notificationsConfigSnapshot.data() : {};\n\n    const schedule = scheduleSnapshot.docs.reduce((acc, doc) => ({ ...acc, [doc.id]: doc.data() }), {});\n    const todayDay = moment().utcOffset(notificationsConfig.timezone).format('YYYY-MM-DD');\n\n    if (schedule[todayDay]) {\n      const beforeTime = moment().subtract(3, 'minutes');\n      const afterTime = moment().add(3, 'minutes');\n\n      const upcomingTimeslot = schedule[todayDay].timeslots\n        .filter(timeslot => {\n          const timeslotTime = moment(`${timeslot.startTime}${notificationsConfig.timezone}`, `${FORMAT}Z`).subtract(10, 'minutes');\n          return timeslotTime.isBetween(beforeTime, afterTime);\n        });\n\n      const upcomingSessions = upcomingTimeslot.reduce((result, timeslot) =>\n        timeslot.sessions.reduce((aggregatedSessions, current) => [...aggregatedSessions, ...current.items], []));\n      const usersIdsSnapshot = await firestore().collection('featuredSessions').get();\n\n      upcomingSessions.forEach(async (upcomingSession, sessionIndex) => {\n        const sessionInfoSnapshot = await firestore().collection('sessions').doc(upcomingSession).get();\n        if (!sessionInfoSnapshot.exists) return;\n\n        const usersIds = usersIdsSnapshot.docs.reduce((acc, doc) => ({ ...acc, [doc.id]: doc.data() }), {});\n\n        const userIdsFeaturedSession = Object.keys(usersIds)\n          .filter(userId => !!Object.keys(usersIds[userId])\n            .filter(sessionId => (sessionId.toString() === upcomingSession.toString()))\n            .length\n          );\n\n        const session = sessionInfoSnapshot.data();\n        const end = moment(`${upcomingTimeslot[0].startTime}${notificationsConfig.timezone}`, `${FORMAT}Z`);\n        const fromNow = end.fromNow();\n\n        if (userIdsFeaturedSession.length) {\n          return sendPushNotificationToUsers(userIdsFeaturedSession, {\n            data: {\n              title: session.title,\n              body: `Starts ${fromNow}`,\n              click_action: `/schedule/${todayDay}?sessionId=${upcomingSessions[sessionIndex]}`,\n              icon: notificationsConfig.icon\n            }\n          });\n        }\n\n        if (upcomingSessions.length) {\n          console.log('Upcoming sessions', upcomingSessions);\n        } else {\n          console.log('There is no sessions right now');\n        }\n      });\n    } else {\n      console.log(todayDay, 'was not found in the schedule')\n    }\n  }\n);\n\nexport default scheduleNotifications;\n"],"file":"schedule-notifications.js"}