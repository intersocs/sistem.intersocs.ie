{"version":3,"file":"firebase-performance.js","sources":["../../node_modules/tslib/tslib.es6.js","../util/src/crypt.ts","../util/src/errors.ts","../../node_modules/idb/lib/idb.mjs","../installations/src/util/constants.ts","../installations/src/util/errors.ts","../installations/src/helpers/extract-app-config.ts","../installations/src/api/common.ts","../installations/src/util/sleep.ts","../installations/src/helpers/generate-fid.ts","../installations/src/helpers/buffer-to-base64-url-safe.ts","../installations/src/helpers/idb-manager.ts","../logger/src/logger.ts","../installations/src/helpers/get-installation-entry.ts","../installations/src/api/create-installation.ts","../installations/src/api/generate-auth-token.ts","../installations/src/helpers/refresh-auth-token.ts","../installations/src/functions/get-token.ts","../installations/src/api/delete-installation.ts","../installations/src/index.ts","../installations/src/functions/get-id.ts","../installations/src/functions/delete-installation.ts","../performance/src/services/api_service.ts","../performance/src/services/settings_service.ts","../performance/src/constants.ts","../performance/src/utils/errors.ts","../performance/src/services/iid_service.ts","../performance/src/utils/attributes_utils.ts","../performance/src/utils/console_logger.ts","../performance/src/services/remote_config_service.ts","../performance/src/services/initialization_service.ts","../performance/src/services/cc_service.ts","../performance/src/services/perf_logger.ts","../performance/src/resources/trace.ts","../performance/src/resources/network_request.ts","../performance/src/services/oob_resources_service.ts","../performance/src/controllers/perf.ts","../performance/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function(str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function(bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\n// Static lookup maps, lazily populated by init_()\nclass Base64 {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: { [key: number]: string } | null = null;\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: { [key: string]: number } | null = null;\n\n  /**\n   * Maps bytes to websafe characters.\n   */\n  byteToCharMapWebSafe_: { [key: number]: string } | null = null;\n\n  /**\n   * Maps websafe characters to bytes.\n   */\n  charToByteMapWebSafe_: { [key: string]: number } | null = null;\n\n  /**\n   * Our default alphabet shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE: string =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789';\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS(): string {\n    return this.ENCODED_VALS_BASE + '+/=';\n  }\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE(): string {\n    return this.ENCODED_VALS_BASE + '-_.';\n  }\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   */\n  HAS_NATIVE_SUPPORT: boolean = typeof atob === 'function';\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  }\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  }\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  }\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  }\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_(): void {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function(str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function(str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n\nexport const base64 = new Base64();\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: StringLike | undefined;\n}\n\nexport interface FirebaseError extends Error, ErrorData {\n  // Unique code for error - format is service/error-code-string.\n  readonly code: string;\n\n  // Developer-friendly error message.\n  readonly message: string;\n\n  // Always 'FirebaseError'.\n  readonly name: typeof ERROR_NAME;\n\n  // Where available - stack backtrace in a string.\n  readonly stack?: string;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(readonly code: string, message: string) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage);\n\n    // Keys with an underscore at the end of their name are not included in\n    // error.data for some reason.\n    // TODO: Replace with Object.entries when lib is updated to es2017.\n    for (const key of Object.keys(customData)) {\n      if (key.slice(-1) !== '_') {\n        if (key in error) {\n          console.warn(\n            `Overwriting FirebaseError base field \"${key}\" can cause unexpected behavior.`\n          );\n        }\n        error[key] = customData[key];\n      }\n    }\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? value.toString() : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","function toArray(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\nfunction promisifyRequest(request) {\n  return new Promise(function(resolve, reject) {\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\n\nfunction promisifyRequestCall(obj, method, args) {\n  var request;\n  var p = new Promise(function(resolve, reject) {\n    request = obj[method].apply(obj, args);\n    promisifyRequest(request).then(resolve, reject);\n  });\n\n  p.request = request;\n  return p;\n}\n\nfunction promisifyCursorRequestCall(obj, method, args) {\n  var p = promisifyRequestCall(obj, method, args);\n  return p.then(function(value) {\n    if (!value) return;\n    return new Cursor(value, p.request);\n  });\n}\n\nfunction proxyProperties(ProxyClass, targetProp, properties) {\n  properties.forEach(function(prop) {\n    Object.defineProperty(ProxyClass.prototype, prop, {\n      get: function() {\n        return this[targetProp][prop];\n      },\n      set: function(val) {\n        this[targetProp][prop] = val;\n      }\n    });\n  });\n}\n\nfunction proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return this[targetProp][prop].apply(this[targetProp], arguments);\n    };\n  });\n}\n\nfunction proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction Index(index) {\n  this._index = index;\n}\n\nproxyProperties(Index, '_index', [\n  'name',\n  'keyPath',\n  'multiEntry',\n  'unique'\n]);\n\nproxyRequestMethods(Index, '_index', IDBIndex, [\n  'get',\n  'getKey',\n  'getAll',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(Index, '_index', IDBIndex, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nfunction Cursor(cursor, request) {\n  this._cursor = cursor;\n  this._request = request;\n}\n\nproxyProperties(Cursor, '_cursor', [\n  'direction',\n  'key',\n  'primaryKey',\n  'value'\n]);\n\nproxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n  'update',\n  'delete'\n]);\n\n// proxy 'next' methods\n['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n  if (!(methodName in IDBCursor.prototype)) return;\n  Cursor.prototype[methodName] = function() {\n    var cursor = this;\n    var args = arguments;\n    return Promise.resolve().then(function() {\n      cursor._cursor[methodName].apply(cursor._cursor, args);\n      return promisifyRequest(cursor._request).then(function(value) {\n        if (!value) return;\n        return new Cursor(value, cursor._request);\n      });\n    });\n  };\n});\n\nfunction ObjectStore(store) {\n  this._store = store;\n}\n\nObjectStore.prototype.createIndex = function() {\n  return new Index(this._store.createIndex.apply(this._store, arguments));\n};\n\nObjectStore.prototype.index = function() {\n  return new Index(this._store.index.apply(this._store, arguments));\n};\n\nproxyProperties(ObjectStore, '_store', [\n  'name',\n  'keyPath',\n  'indexNames',\n  'autoIncrement'\n]);\n\nproxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'put',\n  'add',\n  'delete',\n  'clear',\n  'get',\n  'getAll',\n  'getKey',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nproxyMethods(ObjectStore, '_store', IDBObjectStore, [\n  'deleteIndex'\n]);\n\nfunction Transaction(idbTransaction) {\n  this._tx = idbTransaction;\n  this.complete = new Promise(function(resolve, reject) {\n    idbTransaction.oncomplete = function() {\n      resolve();\n    };\n    idbTransaction.onerror = function() {\n      reject(idbTransaction.error);\n    };\n    idbTransaction.onabort = function() {\n      reject(idbTransaction.error);\n    };\n  });\n}\n\nTransaction.prototype.objectStore = function() {\n  return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n};\n\nproxyProperties(Transaction, '_tx', [\n  'objectStoreNames',\n  'mode'\n]);\n\nproxyMethods(Transaction, '_tx', IDBTransaction, [\n  'abort'\n]);\n\nfunction UpgradeDB(db, oldVersion, transaction) {\n  this._db = db;\n  this.oldVersion = oldVersion;\n  this.transaction = new Transaction(transaction);\n}\n\nUpgradeDB.prototype.createObjectStore = function() {\n  return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n};\n\nproxyProperties(UpgradeDB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(UpgradeDB, '_db', IDBDatabase, [\n  'deleteObjectStore',\n  'close'\n]);\n\nfunction DB(db) {\n  this._db = db;\n}\n\nDB.prototype.transaction = function() {\n  return new Transaction(this._db.transaction.apply(this._db, arguments));\n};\n\nproxyProperties(DB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(DB, '_db', IDBDatabase, [\n  'close'\n]);\n\n// Add cursor iterators\n// TODO: remove this once browsers do the right thing with promises\n['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n  [ObjectStore, Index].forEach(function(Constructor) {\n    // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n    if (!(funcName in Constructor.prototype)) return;\n\n    Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n      var args = toArray(arguments);\n      var callback = args[args.length - 1];\n      var nativeObject = this._store || this._index;\n      var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n      request.onsuccess = function() {\n        callback(request.result);\n      };\n    };\n  });\n});\n\n// polyfill getAll\n[Index, ObjectStore].forEach(function(Constructor) {\n  if (Constructor.prototype.getAll) return;\n  Constructor.prototype.getAll = function(query, count) {\n    var instance = this;\n    var items = [];\n\n    return new Promise(function(resolve) {\n      instance.iterateCursor(query, function(cursor) {\n        if (!cursor) {\n          resolve(items);\n          return;\n        }\n        items.push(cursor.value);\n\n        if (count !== undefined && items.length == count) {\n          resolve(items);\n          return;\n        }\n        cursor.continue();\n      });\n    });\n  };\n});\n\nexport function openDb(name, version, upgradeCallback) {\n  var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n  var request = p.request;\n\n  if (request) {\n    request.onupgradeneeded = function(event) {\n      if (upgradeCallback) {\n        upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n      }\n    };\n  }\n\n  return p.then(function(db) {\n    return new DB(db);\n  });\n}\n\nexport function deleteDb(name) {\n  return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  CREATE_INSTALLATION_FAILED = 'create-installation-failed',\n  GENERATE_TOKEN_FAILED = 'generate-token-failed',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: 'Missing App configuration values.',\n  [ErrorCode.CREATE_INSTALLATION_FAILED]:\n    'Could not register Firebase Installation.',\n  [ErrorCode.GENERATE_TOKEN_FAILED]: 'Could not generate Auth Token.',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & ServerErrorData;\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { AppConfig } from '../interfaces/app-config';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES);\n  }\n\n  const appName = app.name;\n  const { projectId, apiKey, appId } = app.options;\n\n  if (!appName || !projectId || !apiKey || !appId) {\n    throw ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES);\n  }\n\n  return { appName, projectId, apiKey, appId };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppConfig } from '../interfaces/app-config';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(appConfig: AppConfig): Promise<unknown> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(value, key);\n  await tx.complete;\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<OldType, NewType>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: OldType | undefined) => NewType\n): Promise<NewType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === oldValue) {\n    return newValue;\n  }\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n\n  await tx.complete;\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.complete;\n}\n\nfunction getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  switch (logType) {\n    /**\n     * By default, `console.debug` is not displayed in the developer console (in\n     * chrome). To avoid forcing users to have to opt-in to these logs twice\n     * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n     * logs to the `console.log` function.\n     */\n    case LogLevel.DEBUG:\n      console.log(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.VERBOSE:\n      console.log(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.INFO:\n      console.info(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.WARN:\n      console.warn(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.ERROR:\n      console.error(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    default:\n      throw new Error(\n        `Attempted to log a message with an invalid logType (value: ${logType})`\n      );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError('Invalid value assigned to `logLevel`');\n    }\n    this._logLevel = val;\n  }\n\n  /**\n   * The log handler for the Logger instance.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallation } from '../api/create-installation';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RequestStatus,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(\n    appConfig,\n    (oldEntry?: InstallationEntry): InstallationEntry => {\n      const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n      const entryWithPromise = triggerRegistrationIfNecessary(\n        appConfig,\n        installationEntry\n      );\n      registrationPromise = entryWithPromise.registrationPromise;\n      return entryWithPromise.installationEntry;\n    }\n  );\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the registration\n * and return an InProgressInstallationEntry.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallation(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    throw ERROR_FACTORY.create(ErrorCode.CREATE_INSTALLATION_FAILED);\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(\n    appConfig,\n    (oldEntry?: InstallationEntry): InstallationEntry => {\n      if (!oldEntry) {\n        throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n      }\n\n      if (hasInstallationRequestTimedOut(oldEntry)) {\n        return {\n          fid: oldEntry.fid,\n          registrationStatus: RequestStatus.NOT_STARTED\n        };\n      }\n\n      return oldEntry;\n    }\n  );\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function createInstallation(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function generateAuthToken(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthToken } from '../api/generate-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(appConfig: AppConfig): Promise<string> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(\n    appConfig,\n    (oldEntry?: InstallationEntry): RegisteredInstallationEntry => {\n      if (!isEntryRegistered(oldEntry)) {\n        throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n      }\n\n      const oldAuthToken = oldEntry.authToken;\n      if (isAuthTokenValid(oldAuthToken)) {\n        // There is a valid token in the DB.\n        return oldEntry;\n      } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n        // There already is a token request in progress.\n        tokenPromise = waitUntilAuthTokenRequest(appConfig);\n        return oldEntry;\n      } else {\n        // No token or token expired.\n        if (!navigator.onLine) {\n          throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n        }\n\n        const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n        tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\n        return inProgressEntry;\n      }\n    }\n  );\n\n  const authToken: CompletedAuthToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken.token;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n */\nasync function waitUntilAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    throw ERROR_FACTORY.create(ErrorCode.GENERATE_TOKEN_FAILED);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(\n    appConfig,\n    (oldEntry?: InstallationEntry): RegisteredInstallationEntry => {\n      if (!isEntryRegistered(oldEntry)) {\n        throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n      }\n\n      const oldAuthToken = oldEntry.authToken;\n      if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n        return {\n          ...oldEntry,\n          authToken: { requestStatus: RequestStatus.NOT_STARTED }\n        };\n      }\n\n      return oldEntry;\n    }\n  );\n}\n\nasync function fetchAuthTokenFromServer(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthToken(appConfig, installationEntry);\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (isServerError(e) && (e.serverCode === 401 || e.serverCode === 404)) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function getToken(app: FirebaseApp): Promise<string> {\n  const appConfig = extractAppConfig(app);\n\n  await completeInstallationRegistration(appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  return refreshAuthToken(appConfig);\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    appConfig\n  );\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  } else if (installationEntry.registrationStatus !== RequestStatus.COMPLETED) {\n    // Installation ID can't be registered.\n    throw ERROR_FACTORY.create(ErrorCode.CREATE_INSTALLATION_FAILED);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallation(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport {\n  _FirebaseNamespace,\n  FirebaseServiceFactory\n} from '@firebase/app-types/private';\nimport { FirebaseInstallations } from '@firebase/installations-types';\n\nimport { deleteInstallation, getId, getToken } from './functions';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport function registerInstallations(instance: _FirebaseNamespace): void {\n  const installationsName = 'installations';\n\n  const factoryMethod: FirebaseServiceFactory = app => {\n    // Throws if app isn't configured properly.\n    extractAppConfig(app);\n\n    return {\n      app,\n      getId: () => getId(app),\n      getToken: () => getToken(app),\n      delete: () => deleteInstallation(app)\n    };\n  };\n\n  instance.INTERNAL.registerService(installationsName, factoryMethod);\n}\n\nregisterInstallations(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior of `registerInstallations`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    installations(app?: FirebaseApp): FirebaseInstallations;\n  }\n  interface FirebaseApp {\n    installations(): FirebaseInstallations;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { RequestStatus } from '../interfaces/installation-entry';\n\nexport async function getId(app: FirebaseApp): Promise<string> {\n  const appConfig = extractAppConfig(app);\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    appConfig\n  );\n\n  if (registrationPromise) {\n    // Suppress registration errors as they are not a problem for getId.\n    registrationPromise.catch(() => {});\n  }\n\n  if (installationEntry.registrationStatus === RequestStatus.COMPLETED) {\n    // If the installation is already registered, update the authentication\n    // token if needed. Suppress errors as they are not relevant to getId.\n    refreshAuthToken(appConfig).catch(() => {});\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { deleteInstallation as deleteInstallationRequest } from '../api/delete-installation';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { remove, update } from '../helpers/idb-manager';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function deleteInstallation(app: FirebaseApp): Promise<void> {\n  const appConfig = extractAppConfig(app);\n\n  const entry = await update(\n    appConfig,\n    (\n      oldEntry?: InstallationEntry\n    ):\n      | InProgressInstallationEntry\n      | RegisteredInstallationEntry\n      | undefined => {\n      if (\n        oldEntry &&\n        oldEntry.registrationStatus === RequestStatus.NOT_STARTED\n      ) {\n        // Delete the unregistered entry without sending a deleteInstallation request.\n        return undefined;\n      }\n      return oldEntry;\n    }\n  );\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\ndeclare global {\n  interface Window {\n    PerformanceObserver: typeof PerformanceObserver;\n    perfMetrics?: { onFirstInputDelay: Function };\n  }\n}\n\nlet apiInstance: Api | undefined;\nlet windowInstance: Window | undefined;\n\nexport type EntryType =\n  | 'mark'\n  | 'measure'\n  | 'paint'\n  | 'resource'\n  | 'frame'\n  | 'navigation';\n\n/**\n * This class holds a reference to various browser related objects injected by set methods.\n */\nexport class Api {\n  private performance: Performance;\n  /** PreformanceObserver constructor function. */\n  private PerformanceObserver: typeof PerformanceObserver;\n  private windowLocation: Location;\n  onFirstInputDelay?: Function;\n  localStorage!: Storage;\n  document: Document;\n  navigator: Navigator;\n\n  constructor(window?: Window) {\n    if (!window) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n    }\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will throw an exception.\n      this.localStorage = window.localStorage;\n    }\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  getUrl(): string {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  }\n\n  mark(name: string): void {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n    this.performance.mark(name);\n  }\n\n  measure(measureName: string, mark1: string, mark2: string): void {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n    this.performance.measure(measureName, mark1, mark2);\n  }\n\n  getEntriesByType(type: EntryType): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n    return this.performance.getEntriesByType(type);\n  }\n\n  getEntriesByName(name: string): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n    return this.performance.getEntriesByName(name);\n  }\n\n  getTimeOrigin(): number {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return (\n      this.performance &&\n      (this.performance.timeOrigin || this.performance.timing.navigationStart)\n    );\n  }\n\n  requiredApisAvailable(): boolean {\n    if (fetch && Promise && this.navigator && this.navigator.cookieEnabled) {\n      return true;\n    }\n    return false;\n  }\n\n  setupObserver(\n    entryType: EntryType,\n    callback: (entry: PerformanceEntry) => void\n  ): void {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    });\n\n    // Start observing the entry types you care about.\n    observer.observe({ entryTypes: [entryType] });\n  }\n\n  static getInstance(): Api {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n    return apiInstance;\n  }\n}\n\nexport function setupApi(window: Window): void {\n  windowInstance = window;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\nlet settingsServiceInstance: SettingsService | undefined;\n\nexport class SettingsService {\n  // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n  instrumentationEnabled = true;\n\n  // The variable which controls logging of custom traces.\n  dataCollectionEnabled = true;\n\n  // Configuration flags set through remote config.\n  loggingEnabled = false;\n  // Sampling rate between 0 and 1.\n  tracesSamplingRate = 1;\n  networkRequestsSamplingRate = 1;\n  // Address of logging service.\n  logEndPointUrl =\n    'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n  logSource = 462;\n\n  // Flags which control per session logging of traces and network requests.\n  logTraceAfterSampling = false;\n  logNetworkAfterSampling = false;\n\n  // TTL of config retrieved from remote config in hours.\n  configTimeToLive = 12;\n\n  firebaseAppInstance!: FirebaseApp;\n\n  getAppId(): string {\n    const appId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.appId;\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_APP_ID);\n    }\n    return appId;\n  }\n\n  getProjectId(): string {\n    const projectId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.projectId;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_PROJECT_ID);\n    }\n    return projectId;\n  }\n\n  getApiKey(): string {\n    const apiKey =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.apiKey;\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_API_KEY);\n    }\n    return apiKey;\n  }\n\n  static getInstance(): SettingsService {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n    return settingsServiceInstance;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../package.json';\n\nexport const SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\nexport const TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nexport const TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nexport const TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nexport const OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\n\nexport const FIRST_PAINT_COUNTER_NAME = '_fp';\n\nexport const FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\n\nexport const FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\n\nexport const CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\n\nexport const CONFIG_EXPIRY_LOCAL_STORAGE_KEY =\n  '@firebase/performance/configexpire';\n\nexport const SERVICE = 'performance';\nexport const SERVICE_NAME = 'Performance';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from '../constants';\n\nexport const enum ErrorCode {\n  TRACE_STARTED_BEFORE = 'trace started',\n  TRACE_STOPPED_BEFORE = 'trace stopped',\n  NO_WINDOW = 'no window',\n  NO_APP_ID = 'no app id',\n  NO_PROJECT_ID = 'no project id',\n  NO_API_KEY = 'no api key',\n  INVALID_CC_LOG = 'invalid cc log',\n  FB_NOT_DEFAULT = 'FB not default',\n  RC_NOT_OK = 'RC response not ok'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.TRACE_STARTED_BEFORE]: 'Trace {$traceName} was started before.',\n  [ErrorCode.TRACE_STOPPED_BEFORE]: 'Trace {$traceName} is not running.',\n  [ErrorCode.NO_WINDOW]: 'Window is not available.',\n  [ErrorCode.NO_APP_ID]: 'App id is not available.',\n  [ErrorCode.NO_PROJECT_ID]: 'Project id is not available.',\n  [ErrorCode.NO_API_KEY]: 'Api key is not available.',\n  [ErrorCode.INVALID_CC_LOG]: 'Attempted to queue invalid cc event',\n  [ErrorCode.FB_NOT_DEFAULT]:\n    'Performance can only start when Firebase app instance is the default one.',\n  [ErrorCode.RC_NOT_OK]: 'RC response is not ok'\n};\n\ninterface ErrorParams {\n  [ErrorCode.TRACE_STARTED_BEFORE]: { traceName: string };\n  [ErrorCode.TRACE_STOPPED_BEFORE]: { traceName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\nimport { SettingsService } from './settings_service';\n\nlet iid: string | undefined;\nlet authToken: string | undefined;\n\nexport function getIidPromise(): Promise<string> {\n  const iidPromise = SettingsService.getInstance()\n    .firebaseAppInstance.installations()\n    .getId();\n  // tslint:disable-next-line:no-floating-promises\n  iidPromise.then((iidVal: string) => {\n    iid = iidVal;\n  });\n  return iidPromise;\n}\n\n// This method should be used after the iid is retrieved by getIidPromise method.\nexport function getIid(): string | undefined {\n  return iid;\n}\n\nexport function getAuthTokenPromise(): Promise<string> {\n  const authTokenPromise = SettingsService.getInstance()\n    .firebaseAppInstance.installations()\n    .getToken();\n  // tslint:disable-next-line:no-floating-promises\n  authTokenPromise.then((authTokenVal: string) => {\n    authToken = authTokenVal;\n  });\n  return authTokenPromise;\n}\n\nexport function getAuthenticationToken(): string | undefined {\n  return authToken;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\n\n// The values and orders of the following enums should not be changed.\nconst enum ServiceWorkerStatus {\n  UNKNOWN = 0,\n  UNSUPPORTED = 1,\n  CONTROLLED = 2,\n  UNCONTROLLED = 3\n}\n\nexport enum VisibilityState {\n  UNKNOWN = 0,\n  VISIBLE = 1,\n  HIDDEN = 2,\n  PRERENDER = 3,\n  UNLOADED = 4\n}\n\nconst enum EffectiveConnectionType {\n  UNKNOWN = 0,\n  CONNECTION_SLOW_2G = 1,\n  CONNECTION_2G = 2,\n  CONNECTION_3G = 3,\n  CONNECTION_4G = 4\n}\n\nexport function getServiceWorkerStatus(): ServiceWorkerStatus {\n  const navigator = Api.getInstance().navigator;\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return ServiceWorkerStatus.CONTROLLED;\n    } else {\n      return ServiceWorkerStatus.UNCONTROLLED;\n    }\n  } else {\n    return ServiceWorkerStatus.UNSUPPORTED;\n  }\n}\n\nexport function getVisibilityState(): VisibilityState {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    case 'prerender':\n      return VisibilityState.PRERENDER;\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nexport function getEffectiveConnectionType(): EffectiveConnectionType {\n  const navigator = Api.getInstance().navigator;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const navigatorConnection = (navigator as any).connection;\n  const effectiveType =\n    navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return EffectiveConnectionType.CONNECTION_SLOW_2G;\n    case '2g':\n      return EffectiveConnectionType.CONNECTION_2G;\n    case '3g':\n      return EffectiveConnectionType.CONNECTION_3G;\n    case '4g':\n      return EffectiveConnectionType.CONNECTION_4G;\n    default:\n      return EffectiveConnectionType.UNKNOWN;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SERVICE_NAME } from '../constants';\n\nexport const consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsService } from './settings_service';\nimport {\n  SDK_VERSION,\n  CONFIG_LOCAL_STORAGE_KEY,\n  CONFIG_EXPIRY_LOCAL_STORAGE_KEY\n} from '../constants';\nimport { Api } from './api_service';\nimport { getAuthTokenPromise } from './iid_service';\nimport { consoleLogger } from '../utils/console_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n\ninterface SecondaryConfig {\n  loggingEnabled?: boolean;\n  logEndPointUrl?: string;\n  logSource?: number;\n  tracesSamplingRate?: number;\n  networkRequestsSamplingRate?: number;\n}\n\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nconst SECONDARY_CONFIGS: SecondaryConfig = {\n  loggingEnabled: true\n};\n\n/* eslint-disable camelcase */\ninterface RemoteConfigTemplate {\n  fpr_enabled?: string;\n  fpr_log_source?: string;\n  fpr_log_endpoint_url?: string;\n  fpr_vc_network_request_sampling_rate?: string;\n  fpr_vc_trace_sampling_rate?: string;\n  fpr_vc_session_sampling_rate?: string;\n}\n/* eslint-enable camelcase */\n\ninterface RemoteConfigResponse {\n  entries?: RemoteConfigTemplate;\n  state?: string;\n}\n\nconst FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nexport function getConfig(iid: string): Promise<void> {\n  const config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid)\n    .then(config => processConfig(config))\n    .then(\n      config => storeConfig(config),\n      /** Do nothing for error, use defaults set in settings service. */ () => {}\n    );\n}\n\nfunction getStoredConfig(): RemoteConfigResponse | undefined {\n  const localStorage = Api.getInstance().localStorage;\n  const expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  const configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) {\n    return;\n  }\n  try {\n    const configResponse: RemoteConfigResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch {\n    return;\n  }\n}\n\nfunction storeConfig(config: RemoteConfigResponse | undefined): void {\n  if (!config) {\n    return;\n  }\n  const localStorage = Api.getInstance().localStorage;\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(\n    CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n    String(\n      Date.now() +\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000\n    )\n  );\n}\n\nconst COULD_NOT_GET_CONFIG_MSG =\n  'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(\n  iid: string\n): Promise<RemoteConfigResponse | undefined> {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise()\n    .then(authToken => {\n      const projectId = SettingsService.getInstance().getProjectId();\n      const configEndPoint = `https://firebaseremoteconfig.googleapis.com/v1/projects/${projectId}/namespaces/fireperf:fetch?key=${SettingsService.getInstance().getApiKey()}`;\n      const request = new Request(configEndPoint, {\n        method: 'POST',\n        headers: {\n          Authorization: `${FIS_AUTH_PREFIX} ${authToken}`\n        },\n        /* eslint-disable camelcase */\n        body: JSON.stringify({\n          app_instance_id: iid,\n          app_instance_id_token: authToken,\n          app_id: SettingsService.getInstance().getAppId(),\n          app_version: SDK_VERSION,\n          sdk_version: REMOTE_CONFIG_SDK_VERSION\n        })\n        /* eslint-enable camelcase */\n      });\n      return fetch(request).then(response => {\n        if (response.ok) {\n          return response.json() as RemoteConfigResponse;\n        }\n        // In case response is not ok. This will be caught by catch.\n        throw ERROR_FACTORY.create(ErrorCode.RC_NOT_OK);\n      });\n    })\n    .catch(() => {\n      consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n      return undefined;\n    });\n}\n\n/**\n * Processes config coming either from calling RC or from local storage.\n * This method only runs if call is successful or config in storage\n * is valie.\n */\nfunction processConfig(\n  config: RemoteConfigResponse | undefined\n): RemoteConfigResponse | undefined {\n  if (!config) {\n    return config;\n  }\n  const settingsServiceInstance = SettingsService.getInstance();\n  const entries = config.entries || {};\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is known.\n    settingsServiceInstance.loggingEnabled =\n      String(entries.fpr_enabled) === 'true';\n  } else if (SECONDARY_CONFIGS.loggingEnabled !== undefined) {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\n  }\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  } else if (SECONDARY_CONFIGS.logSource) {\n    settingsServiceInstance.logSource = SECONDARY_CONFIGS.logSource;\n  }\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } else if (SECONDARY_CONFIGS.logEndPointUrl) {\n    settingsServiceInstance.logEndPointUrl = SECONDARY_CONFIGS.logEndPointUrl;\n  }\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(\n      entries.fpr_vc_network_request_sampling_rate\n    );\n  } else if (SECONDARY_CONFIGS.networkRequestsSamplingRate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate =\n      SECONDARY_CONFIGS.networkRequestsSamplingRate;\n  }\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(\n      entries.fpr_vc_trace_sampling_rate\n    );\n  } else if (SECONDARY_CONFIGS.tracesSamplingRate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate =\n      SECONDARY_CONFIGS.tracesSamplingRate;\n  }\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.tracesSamplingRate\n  );\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.networkRequestsSamplingRate\n  );\n  return config;\n}\n\nfunction configValid(expiry: string): boolean {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate: number): boolean {\n  return Math.random() <= samplingRate;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIidPromise } from './iid_service';\nimport { getConfig } from './remote_config_service';\nimport { Api } from './api_service';\n\nconst enum InitializationStatus {\n  notInitialized = 1,\n  initializationPending,\n  initialized\n}\n\nlet initializationStatus = InitializationStatus.notInitialized;\n\nlet initializationPromise: Promise<void> | undefined;\n\nexport function getInitializationPromise(): Promise<void> {\n  initializationStatus = InitializationStatus.initializationPending;\n\n  initializationPromise = initializationPromise || initializePerf();\n\n  return initializationPromise;\n}\n\nexport function isPerfInitialized(): boolean {\n  return initializationStatus === InitializationStatus.initialized;\n}\n\nfunction initializePerf(): Promise<void> {\n  return getDocumentReadyComplete()\n    .then(() => getIidPromise())\n    .then(iid => getConfig(iid))\n    .then(\n      () => changeInitializationStatus(),\n      () => changeInitializationStatus()\n    );\n}\n\n/**\n * Returns a promise which resolves whenever the document readystate is complete or\n * immediately if it is called after page load complete.\n */\nfunction getDocumentReadyComplete(): Promise<void> {\n  const document = Api.getInstance().document;\n  return new Promise(resolve => {\n    if (document && document.readyState !== 'complete') {\n      const handler = (): void => {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler);\n          resolve();\n        }\n      };\n      document.addEventListener('readystatechange', handler);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus(): void {\n  initializationStatus = InitializationStatus.initialized;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogHandler, Logger, LogLevel } from '@firebase/logger';\nimport { SettingsService } from './settings_service';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nconst INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nconst DEFAULT_REMAINING_TRIES = 3;\nlet remainingTries = DEFAULT_REMAINING_TRIES;\n\ninterface BatchEvent {\n  message: string;\n  eventTime: number;\n}\n\n/* eslint-disable camelcase */\n// CC accepted log format.\ninterface CcBatchLogFormat {\n  request_time_ms: string;\n  client_info: ClientInfo;\n  log_source: number;\n  log_event: Log[];\n}\n\ninterface ClientInfo {\n  client_type: number;\n  js_client_info: {};\n}\n\ninterface Log {\n  source_extension_json: string;\n  event_time_ms: string;\n}\n/* eslint-enable camelcase */\n\nlet queue: BatchEvent[] = [];\n\nfunction processQueue(timeOffset: number): void {\n  setTimeout(() => {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    }\n\n    // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n\n    // Capture a snapshot of the queue and empty the \"official queue\".\n    const staged = [...queue];\n    queue = [];\n\n    /* eslint-disable camelcase */\n    // We will pass the JSON serialized event to the backend.\n    const log_event = staged.map(evt => ({\n      source_extension_json: evt.message,\n      event_time_ms: String(evt.eventTime)\n    }));\n\n    const data: CcBatchLogFormat = {\n      request_time_ms: String(Date.now()),\n      client_info: {\n        client_type: 1, // 1 is JS\n        js_client_info: {}\n      },\n      log_source: SettingsService.getInstance().logSource,\n      log_event\n    };\n    /* eslint-enable camelcase */\n\n    fetch(SettingsService.getInstance().logEndPointUrl, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n      .then(res => {\n        if (!res.ok) {\n          consoleLogger.info('Call to Firebase backend failed.');\n        }\n        return res.json();\n      })\n      .then(res => {\n        const wait = Number(res.next_request_wait_millis);\n\n        // Find the next call wait time from the response.\n        const requestOffset = isNaN(wait)\n          ? DEFAULT_SEND_INTERVAL_MS\n          : Math.max(DEFAULT_SEND_INTERVAL_MS, wait);\n        remainingTries = DEFAULT_REMAINING_TRIES;\n        // Schedule the next process.\n        processQueue(requestOffset);\n      })\n      .catch(() => {\n        /**\n         * If the request fails for some reason, add the events that were attempted\n         * back to the primary queue to retry later.\n         */\n        queue = [...staged, ...queue];\n        remainingTries--;\n        consoleLogger.info(`Tries left: ${remainingTries}.`);\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\n      });\n  }, timeOffset);\n}\n\nprocessQueue(INITIAL_SEND_TIME_DELAY_MS);\n\nfunction addToQueue(evt: BatchEvent): void {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_CC_LOG);\n  }\n  // Add the new event to the queue.\n  queue = [...queue, evt];\n}\n\n/** Log handler for cc service to send the performance logs to the server. */\nexport function ccHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  serializer: (...args: any[]) => string\n): LogHandler {\n  // The underscores for loggerInstance and level parameters are added to avoid the\n  // noUnusedParameters related error.\n  return (_loggerInstance: Logger, _level: LogLevel, ...args) => {\n    const message = serializer(...args);\n    addToQueue({\n      message,\n      eventTime: Date.now()\n    });\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIid } from './iid_service';\nimport { NetworkRequest } from '../resources/network_request';\nimport { Trace } from '../resources/trace';\nimport { Api } from './api_service';\nimport { SettingsService } from './settings_service';\nimport {\n  getServiceWorkerStatus,\n  getVisibilityState,\n  VisibilityState,\n  getEffectiveConnectionType\n} from '../utils/attributes_utils';\nimport {\n  isPerfInitialized,\n  getInitializationPromise\n} from './initialization_service';\nimport { Logger } from '@firebase/logger';\nimport { ccHandler } from './cc_service';\nimport { SDK_VERSION } from '../constants';\n\nconst enum ResourceType {\n  NetworkRequest,\n  Trace\n}\n\n/* eslint-disable camelcase */\ninterface ApplicationInfo {\n  google_app_id: string;\n  app_instance_id?: string;\n  web_app_info: WebAppInfo;\n  application_process_state: number;\n}\n\ninterface WebAppInfo {\n  sdk_version: string;\n  page_url: string;\n  service_worker_status: number;\n  visibility_state: number;\n  effective_connection_type: number;\n}\n\ninterface PerfNetworkLog {\n  application_info: ApplicationInfo;\n  network_request_metric: NetworkRequestMetric;\n}\n\ninterface PerfTraceLog {\n  application_info: ApplicationInfo;\n  trace_metric: TraceMetric;\n}\n\ninterface NetworkRequestMetric {\n  url: string;\n  http_method: number;\n  http_response_code: number;\n  response_payload_bytes?: number;\n  client_start_time_us?: number;\n  time_to_response_initiated_us?: number;\n  time_to_response_completed_us?: number;\n}\n\ninterface TraceMetric {\n  name: string;\n  is_auto: boolean;\n  client_start_time_us: number;\n  duration_us: number;\n  counters?: Array<{ key: string; value: number }>;\n  custom_attributes?: Array<{ key: string; value: string }>;\n}\n/* eslint-enble camelcase */\n\nlet logger: Logger | undefined;\n// This method is not called before initialization.\nfunction getLogger(): Logger {\n  if (logger) {\n    return logger;\n  }\n  const ccLogger = ccHandler(serializer);\n  logger = new Logger('@firebase/performance/cc');\n  logger.logHandler = ccLogger;\n  return logger;\n}\n\nexport function logTrace(trace: Trace): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  }\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  }\n  // Do not log if required apis are not available.\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  }\n  // Only log the page load auto traces if page is visible.\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logTraceAfterSampling\n  ) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise().then(\n      () => sendTraceLog(trace),\n      () => sendTraceLog(trace)\n    );\n  }\n}\n\nfunction sendTraceLog(trace: Trace): void {\n  if (getIid()) {\n    setTimeout(() => getLogger().log(trace, ResourceType.Trace), 0);\n  }\n}\n\nexport function logNetworkRequest(networkRequest: NetworkRequest): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  }\n  // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\n  if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0]) {\n    return;\n  }\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logNetworkAfterSampling\n  ) {\n    return;\n  }\n\n  setTimeout(\n    () => getLogger().log(networkRequest, ResourceType.NetworkRequest),\n    0\n  );\n}\n\nfunction serializer(resource: {}, resourceType: ResourceType): string {\n  if (resourceType === ResourceType.NetworkRequest) {\n    return serializeNetworkRequest(resource as NetworkRequest);\n  }\n  return serializeTrace(resource as Trace);\n}\n\nfunction serializeNetworkRequest(networkRequest: NetworkRequest): string {\n  const networkRequestMetric: NetworkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  const perfMetric: PerfNetworkLog = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace: Trace): string {\n  const traceMetric: TraceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = convertToKeyValueArray(trace.counters);\n  }\n  const customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = convertToKeyValueArray(customAttributes);\n  }\n\n  const perfMetric: PerfTraceLog = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo(): ApplicationInfo {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n\nfunction convertToKeyValueArray<T>(obj: {\n  [key: string]: T;\n}): Array<{\n  key: string;\n  value: T;\n}> {\n  const keys = Object.keys(obj);\n  return keys.map(key => ({ key, value: obj[key] }));\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  TRACE_START_MARK_PREFIX,\n  TRACE_STOP_MARK_PREFIX,\n  TRACE_MEASURE_PREFIX,\n  OOB_TRACE_PAGE_LOAD_PREFIX,\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n} from '../constants';\nimport { Api } from '../services/api_service';\nimport { logTrace } from '../services/perf_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { PerformanceTrace } from '@firebase/performance-types';\n\nconst enum TraceState {\n  UNINITIALIZED = 1,\n  RUNNING,\n  TERMINATED\n}\n\nexport class Trace implements PerformanceTrace {\n  private state: TraceState = TraceState.UNINITIALIZED;\n  startTimeUs!: number;\n  durationUs!: number;\n  private customAttributes: { [key: string]: string } = {};\n  counters: { [counterName: string]: number } = {};\n  private api = Api.getInstance();\n  private randomId = Math.floor(Math.random() * 1000000);\n  private traceStartMark!: string;\n  private traceStopMark!: string;\n  private traceMeasure!: string;\n\n  /**\n   * @param name The name of the trace.\n   * @param isAuto If the trace is auto-instrumented.\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\n   * is only set when the trace is built for logging when the user directly uses the user timing\n   * api (performance.mark and performance.measure).\n   */\n  constructor(\n    readonly name: string,\n    readonly isAuto = false,\n    traceMeasureName?: string\n  ) {\n    if (!this.isAuto) {\n      this.traceStartMark = `${TRACE_START_MARK_PREFIX}-${this.randomId}-${\n        this.name\n      }`;\n      this.traceStopMark = `${TRACE_STOP_MARK_PREFIX}-${this.randomId}-${\n        this.name\n      }`;\n      this.traceMeasure =\n        traceMeasureName ||\n        `${TRACE_MEASURE_PREFIX}-${this.randomId}-${this.name}`;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n\n  /**\n   * Starts a trace. The measurement of the duration starts at this point.\n   */\n  start(): void {\n    if (this.state !== TraceState.UNINITIALIZED) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STARTED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.api.mark(this.traceStartMark);\n    this.state = TraceState.RUNNING;\n  }\n\n  /**\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\n   * is logged.\n   */\n  stop(): void {\n    if (this.state !== TraceState.RUNNING) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STOPPED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.state = TraceState.TERMINATED;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(\n      this.traceMeasure,\n      this.traceStartMark,\n      this.traceStopMark\n    );\n    this.calculateTraceMetrics();\n    logTrace(this);\n  }\n\n  /**\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\n   * directly. No need to use start and stop methods.\n   * @param startTime Trace start time since epoch in millisec\n   * @param duration The duraction of the trace in millisec\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\n   */\n  record(\n    startTime: number,\n    duration: number,\n    options?: {\n      metrics?: { [key: string]: number };\n      attributes?: { [key: string]: string };\n    }\n  ): void {\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = { ...options.attributes };\n    }\n    if (options && options.metrics) {\n      for (const metric of Object.keys(options.metrics)) {\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n    logTrace(this);\n  }\n\n  /**\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\n   * custom metric if one with the given name does not exist.\n   * @param counter Name of the custom metric\n   * @param num Increment by value\n   */\n  incrementMetric(counter: string, num = 1): void {\n    if (this.counters[counter] === undefined) {\n      this.counters[counter] = 0;\n    }\n    this.counters[counter] += num;\n  }\n\n  /**\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\n   * given name does not exist.\n   * @param counter Name of the custom metric\n   * @param num Set custom metric to this value\n   */\n  putMetric(counter: string, num: number): void {\n    this.counters[counter] = num;\n  }\n\n  /**\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\n   * not exist will return zero.\n   * @param counter\n   */\n  getMetric(counter: string): number {\n    return this.counters[counter] || 0;\n  }\n\n  /**\n   * Sets a custom attribute of a trace to a certain value.\n   * @param attr\n   * @param value\n   */\n  putAttribute(attr: string, value: string): void {\n    this.customAttributes[attr] = value;\n  }\n\n  /**\n   * Retrieves the value a custom attribute of a trace is set to.\n   * @param attr\n   */\n  getAttribute(attr: string): string | undefined {\n    return this.customAttributes[attr];\n  }\n\n  removeAttribute(attr: string): void {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n    delete this.customAttributes[attr];\n  }\n\n  getAttributes(): { [key: string]: string } {\n    return { ...this.customAttributes };\n  }\n\n  private setStartTime(startTime: number): void {\n    this.startTimeUs = startTime;\n  }\n\n  private setDuration(duration: number): void {\n    this.durationUs = duration;\n  }\n\n  /**\n   * Calculates and assigns the duration and start time of the trace using the measure performance\n   * entry.\n   */\n  private calculateTraceMetrics(): void {\n    const perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    const perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor(\n        (perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000\n      );\n    }\n  }\n\n  /**\n   * @param navigationTimings A single element array which contains the navigationTIming object of\n   * the page load\n   * @param paintTimings A array which contains paintTiming object of the page load\n   * @param firstInputDelay First input delay in millisec\n   */\n  static createOobTrace(\n    navigationTimings: PerformanceNavigationTiming[],\n    paintTimings: PerformanceEntry[],\n    firstInputDelay?: number\n  ): void {\n    const route = Api.getInstance().getUrl();\n    if (!route) {\n      return;\n    }\n    const trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    const timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.incrementMetric(\n        'domInteractive',\n        Math.floor(navigationTimings[0].domInteractive * 1000)\n      );\n      trace.incrementMetric(\n        'domContentLoadedEventEnd',\n        Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000)\n      );\n      trace.incrementMetric(\n        'loadEventEnd',\n        Math.floor(navigationTimings[0].loadEventEnd * 1000)\n      );\n    }\n\n    const FIRST_PAINT = 'first-paint';\n    const FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      const firstPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_PAINT\n      );\n      if (firstPaint && firstPaint.startTime) {\n        trace.incrementMetric(\n          FIRST_PAINT_COUNTER_NAME,\n          Math.floor(firstPaint.startTime * 1000)\n        );\n      }\n      const firstContentfulPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_CONTENTFUL_PAINT\n      );\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.incrementMetric(\n          FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n          Math.floor(firstContentfulPaint.startTime * 1000)\n        );\n      }\n\n      if (firstInputDelay) {\n        trace.incrementMetric(\n          FIRST_INPUT_DELAY_COUNTER_NAME,\n          Math.floor(firstInputDelay * 1000)\n        );\n      }\n    }\n\n    logTrace(trace);\n  }\n\n  static createUserTimingTrace(measureName: string): void {\n    const trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\nimport { logNetworkRequest } from '../services/perf_logger';\n\n// The order of values of this enum should not be changed.\nexport const enum HttpMethod {\n  HTTP_METHOD_UNKNOWN = 0,\n  GET = 1,\n  PUT = 2,\n  POST = 3,\n  DELETE = 4,\n  HEAD = 5,\n  PATCH = 6,\n  OPTIONS = 7,\n  TRACE = 8,\n  CONNECT = 9\n}\n\n// Durations are in microseconds.\nexport interface NetworkRequest {\n  url: string;\n  httpMethod?: HttpMethod;\n  requestPayloadBytes?: number;\n  responsePayloadBytes?: number;\n  httpResponseCode?: number;\n  responseContentType?: string;\n  startTimeUs?: number;\n  timeToRequestCompletedUs?: number;\n  timeToResponseInitiatedUs?: number;\n  timeToResponseCompletedUs?: number;\n}\n\nexport function createNetworkRequestEntry(entry: PerformanceEntry): void {\n  const performanceEntry = entry as PerformanceResourceTiming;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n  const timeOrigin = Api.getInstance().getTimeOrigin();\n  const startTimeUs = Math.floor(\n    (performanceEntry.startTime + timeOrigin) * 1000\n  );\n  const timeToResponseInitiatedUs = performanceEntry.responseStart\n    ? Math.floor(\n        (performanceEntry.responseStart - performanceEntry.startTime) * 1000\n      )\n    : undefined;\n  const timeToResponseCompletedUs = Math.floor(\n    (performanceEntry.responseEnd - performanceEntry.startTime) * 1000\n  );\n  // Remove the query params from logged network request url.\n  const url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  const networkRequest: NetworkRequest = {\n    url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs,\n    timeToResponseInitiatedUs,\n    timeToResponseCompletedUs\n  };\n\n  logNetworkRequest(networkRequest);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Api } from './api_service';\nimport { Trace } from '../resources/trace';\nimport { createNetworkRequestEntry } from '../resources/network_request';\nimport { TRACE_MEASURE_PREFIX } from '../constants';\nimport { getIid } from './iid_service';\n\nconst FID_WAIT_TIME_MS = 5000;\n\nexport function setupOobResources(): void {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  }\n  // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n  setTimeout(() => setupOobTraces(), 0);\n  setTimeout(() => setupNetworkRequests(), 0);\n  setTimeout(() => setupUserTimingTraces(), 0);\n}\n\nfunction setupNetworkRequests(): void {\n  const api = Api.getInstance();\n  const resources = api.getEntriesByType('resource');\n  for (const resource of resources) {\n    createNetworkRequestEntry(resource);\n  }\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces(): void {\n  const api = Api.getInstance();\n  const navigationTimings = api.getEntriesByType(\n    'navigation'\n  ) as PerformanceNavigationTiming[];\n  const paintTimings = api.getEntriesByType('paint');\n  // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let timeoutId: any = setTimeout(() => {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay((fid: number) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces(): void {\n  const api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  const measures = api.getEntriesByType('measure');\n  for (const measure of measures) {\n    createUserTimingTrace(measure);\n  }\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure: PerformanceEntry): void {\n  const measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n  if (\n    measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\n    TRACE_MEASURE_PREFIX\n  ) {\n    return;\n  }\n  Trace.createUserTimingTrace(measureName);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Trace } from '../resources/trace';\nimport { setupOobResources } from '../services/oob_resources_service';\nimport { SettingsService } from '../services/settings_service';\nimport { getInitializationPromise } from '../services/initialization_service';\nimport { Api } from '../services/api_service';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebasePerformance } from '@firebase/performance-types';\nimport { consoleLogger } from '../utils/console_logger';\n\nexport class PerformanceController implements FirebasePerformance {\n  constructor(readonly app: FirebaseApp) {\n    if (Api.getInstance().requiredApisAvailable()) {\n      getInitializationPromise().then(setupOobResources, setupOobResources);\n    } else {\n      consoleLogger.info(\n        'Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.'\n      );\n    }\n  }\n\n  trace(name: string): Trace {\n    return new Trace(name);\n  }\n\n  set instrumentationEnabled(val: boolean) {\n    SettingsService.getInstance().instrumentationEnabled = val;\n  }\n  get instrumentationEnabled(): boolean {\n    return SettingsService.getInstance().instrumentationEnabled;\n  }\n\n  set dataCollectionEnabled(val: boolean) {\n    SettingsService.getInstance().dataCollectionEnabled = val;\n  }\n  get dataCollectionEnabled(): boolean {\n    return SettingsService.getInstance().dataCollectionEnabled;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { FirebaseApp, FirebaseNamespace } from '@firebase/app-types';\nimport {\n  _FirebaseNamespace,\n  FirebaseServiceFactory\n} from '@firebase/app-types/private';\nimport { PerformanceController } from './src/controllers/perf';\nimport { setupApi } from './src/services/api_service';\nimport { SettingsService } from './src/services/settings_service';\nimport { ERROR_FACTORY, ErrorCode } from './src/utils/errors';\nimport { FirebasePerformance } from '@firebase/performance-types';\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport function registerPerformance(instance: FirebaseNamespace): void {\n  const factoryMethod: FirebaseServiceFactory = (\n    app: FirebaseApp\n  ): PerformanceController => {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(ErrorCode.FB_NOT_DEFAULT);\n    }\n    SettingsService.getInstance().firebaseAppInstance = app;\n    return new PerformanceController(app);\n  };\n\n  // Register performance with firebase-app.\n  const namespaceExports = {};\n  (instance as _FirebaseNamespace).INTERNAL.registerService(\n    'performance',\n    factoryMethod,\n    namespaceExports\n  );\n}\n\nsetupApi(window);\nregisterPerformance(firebase);\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    performance?: {\n      (app?: FirebaseApp): FirebasePerformance;\n    };\n  }\n  interface FirebaseApp {\n    performance?(): FirebasePerformance;\n  }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","atob","Base64","ENCODED_VALS_BASE","input","webSafe","isArray","Error","init_","byteToCharMap","byteToCharMapWebSafe_","byteToCharMap_","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","join","HAS_NATIVE_SUPPORT","btoa","encodeByteArray","str","out","c","charCodeAt","stringToByteArray","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charToByteMapWebSafe_","charToByteMap_","charAt","byte4","ENCODED_VALS","ENCODED_VALS_WEBSAFE","code","message","_super","_this","FirebaseError","captureStackTrace","ErrorFactory","create","__","constructor","tslib_1.__extends","service","serviceName","errors","_i","data","customData","fullCode","template","replace","PATTERN","key","toString","fullMessage","_b","tslib_1.__values","keys","slice","console","warn","promisifyRequest","request","onsuccess","onerror","promisifyRequestCall","obj","method","args","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","defineProperty","get","set","val","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","arr","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","undefined","continue","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","ERROR_DESCRIPTION_MAP","_a","ERROR_FACTORY","isServerError","includes","extractAppConfig","app","options","appName","name","projectId","apiKey","appId","getInstallationsEndpoint","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","creationTime","Date","now","getErrorFromResponse","requestName","json","responseJson","errorData","serverCode","serverMessage","serverStatus","status","getHeaders","Headers","Content-Type","Accept","x-goog-api-key","getHeadersWithAuth","appConfig","refreshToken","headers","append","retryIfServerError","fn","sleep","ms","setTimeout","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","fid","array","substr","test","LogLevel","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeCallback","upgradeDB","indexedDB","onupgradeneeded","event","getKey","tx","put","remove","delete","update","updateFn","oldValue","newValue","getInstallationEntry","oldEntry","installationEntry","entry","registrationStatus","hasInstallationRequestTimedOut","updateOrCreateInstallationEntry","entryWithPromise","registrationPromise","updateInstallationRequest","waitUntilFidRegistration","navigator","onLine","registrationPromiseWithError","inProgressEntry","registrationTime","endpoint","authVersion","sdkVersion","JSON","stringify","fetch","ok","responseValue","authToken","createInstallation","registeredInstallationEntry","e_1","registerInstallation","triggerRegistrationIfNecessary","generateAuthToken","installation","refreshAuthToken","isEntryRegistered","inProgressAuthToken","oldAuthToken","tokenPromise","updateAuthTokenRequest","waitUntilAuthTokenRequest","requestTime","updatedInstallationEntry","fetchAuthTokenFromServer","getToken","completeInstallationRegistration","deleteInstallation","firebase","INTERNAL","registerService","getId","catch","deleteInstallationRequest","apiInstance","windowInstance","settingsServiceInstance","defaultLogLevel","INFO","defaultLogHandler","logType","logLevel","toISOString","DEBUG","VERBOSE","log","info","WARN","ERROR","Logger","_logLevel","_logHandler","SDK_VERSION","TRACE_MEASURE_PREFIX","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE_NAME","window","performance","PerformanceObserver","windowLocation","location","document","cookieEnabled","localStorage","perfMetrics","onFirstInputDelay","Api","href","split","mark","measureName","mark1","mark2","measure","type","getEntriesByType","getEntriesByName","timeOrigin","timing","navigationStart","entryType","list","getEntries","observe","entryTypes","iid","VisibilityState","SettingsService","firebaseAppInstance","getIid","getVisibilityState","getInstance","visibilityState","VISIBLE","HIDDEN","PRERENDER","UNKNOWN","consoleLogger","REMOTE_CONFIG_SDK_VERSION","SECONDARY_CONFIGS","loggingEnabled","FIS_AUTH_PREFIX","getConfig","authTokenPromise","config","expiryString","getItem","expiry","configStringified","configResponse","parse","getStoredConfig","processConfig","installations","authTokenVal","getProjectId","configEndPoint","getApiKey","Request","Authorization","app_instance_id","app_instance_id_token","app_id","getAppId","app_version","sdk_version","COULD_NOT_GET_CONFIG_MSG","setItem","configTimeToLive","storeConfig","entries","fpr_enabled","fpr_log_source","logSource","fpr_log_endpoint_url","logEndPointUrl","fpr_vc_network_request_sampling_rate","networkRequestsSamplingRate","fpr_vc_trace_sampling_rate","tracesSamplingRate","logTraceAfterSampling","shouldLogAfterSampling","logNetworkAfterSampling","samplingRate","Math","random","initializationPromise","initializationStatus","getInitializationPromise","readyState","handler_1","removeEventListener","addEventListener","iidPromise","iidVal","changeInitializationStatus","logger","DEFAULT_SEND_INTERVAL_MS","DEFAULT_REMAINING_TRIES","remainingTries","queue","ccHandler","serializer","_loggerInstance","_level","evt","eventTime","addToQueue","getLogger","ccLogger","logHandler","logTrace","trace","settingsService","instrumentationEnabled","isAuto","dataCollectionEnabled","requiredApisAvailable","sendTraceLog","resource","resourceType","networkRequestMetric","url","networkRequest","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","counters","convertToKeyValueArray","customAttributes","getAttributes","custom_attributes","trace_metric","serializeTrace","google_app_id","web_app_info","page_url","getUrl","service_worker_status","serviceWorker","controller","visibility_state","effective_connection_type","navigatorConnection","connection","effectiveType","getEffectiveConnectionType","application_process_state","map","processQueue","timeOffset","staged","log_event","source_extension_json","event_time_ms","request_time_ms","client_info","client_type","js_client_info","log_source","res","wait","next_request_wait_millis","requestOffset","isNaN","max","traceMeasureName","floor","traceStartMark","TRACE_START_MARK_PREFIX","randomId","traceStopMark","TRACE_STOP_MARK_PREFIX","traceMeasure","calculateTraceMetrics","Trace","state","traceName","api","startTime","duration","attributes","metrics","metric","counter","num","attr","perfMeasureEntries","perfMeasureEntry","getTimeOrigin","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","setStartTime","setDuration","incrementMetric","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","find","paintObject","firstContentfulPaint","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","transferSize","FID_WAIT_TIME_MS","setupOobResources","timeoutId_1","createOobTrace","clearTimeout","setupOobTraces","resources","resources_1","setupObserver","setupNetworkRequests","measures","measures_1","createUserTimingTrace","setupUserTimingTraces","substring","PerformanceController"],"mappings":"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"}